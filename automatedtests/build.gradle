apply plugin: 'com.android.application'


android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mux.stats.sdk.muxstats.automatedtests"
        minSdkVersion 18
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean", "SHOULD_REPORT_INSTRUMENTATION_TEST_EVENTS_TO_SERVER", "true")
        buildConfigField("String", "INSTRUMENTATION_TEST_ENVIRONMENT_KEY", "\"YOUR KEY HERE\"")
        var bitmovinLicense = System.getenv("BITMOVIN_LICENSE") == null ? "NOT_CONFIGURED" : System.getenv("BITMOVIN_LICENSE")
        manifestPlaceholders.bitmovinLicense = bitmovinLicense
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    testOptions {
        // Changes the directory where Gradle saves test reports. By default, Gradle saves test reports
        // in the path_to_your_project/module_name/build/outputs/reports/ directory.
        // '$rootDir' sets the path relative to the root directory of the current project.
        reportDir "./automated_test_results/reports"
        // Changes the directory where Gradle saves test results. By default, Gradle saves test results
        // in the path_to_your_project/module_name/build/outputs/test-results/ directory.
        // '$rootDir' sets the path relative to the root directory of the current project.
        resultsDir "./automated_test_results/results"
    }

    flavorDimensions 'api'

    sourceSets {
        androidTest {
            // Important, can't get asset file in instrumentation test without this
            assets.srcDirs = ['src/main/assets']
        }
    }

    flavorDimensions('api')

    productFlavors {
        r3_11_1 {
            dimension 'api'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    namespace 'com.mux.stats.sdk.muxstats.automatedtests'
    lint {
        abortOnError false
        disable 'GradleCompatible'
        lintConfig file('../checker-framework-lint.xml')
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // This is the version used by Bitmovin. For some reason this must be declared explicitly for buildkite to work
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.bitmovin.player:player:3.11.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    api 'org.checkerframework:checker-qual:3.12.0'
    implementation project(':library')
}

afterEvaluate {
    dependencies {
//        r3_11_1Api 'com.mux.stats.sdk.muxstats:muxstatssdkbitmovinplayer_r3_11_1:'+project.ext.versionName

    }
}
